name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build_on_mac:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Release Mac Version
        run: npm run release:mac
      - name: Create Release
        id: create_release
        uses: web-clipper/create-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          allow_duplicate: true
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./out/umi-electron-boilerplate.dmg
          asset_name: umi-electron-boilerplate.dmg
          asset_content_type: application/zip

  build_on_win:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-node@master
        with:
          node-version: '10.x'
      - name: install node tools
        run: npm install --global --production windows-build-tools@4.0.0
      - name: install node-gyp
        run: npm install --global node-gyp@latest
      - name: Set node config to use python2.7
        run: npm config set python python2.7
      - name: Set node config to set msvs_version to 2015
        run: npm config set msvs_version 2015
      - name: 安装依赖
        run: npm install
      - name: 编译项目
        run: npm run build
      - name: 打包 Windows 版本
        run: npm run release:win
      - name: 把文件压缩
        run: npm run pack:win
      - name: Create Release
        id: create_release
        continue-on-error: true
        uses: web-clipper/create-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          allow_duplicate: true
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./out/umi-electron-boilerplate.zip
          asset_name: umi-electron-boilerplate.zip
          asset_content_type: application/zip
